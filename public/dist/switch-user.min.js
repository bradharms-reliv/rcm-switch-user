/*! rcm-switch-user 2017-05-16 */

"undefined"!=typeof rcm&&rcm.addAngularModule("rcmSwitchUser"),angular.module("rcmSwitchUser",["RcmLoading","RcmJsLib","rcmApiLib"]),angular.module("rcmSwitchUser").directive("rcmSwitchUserSwitchToUser",["$sce","$window",function($sce,$window){function link($scope,element,attrs){}return{link:link,scope:{propLoading:"=loading",propIsSu:"=isSu",propImpersonatedUser:"=impersonatedUser",propSwitchBackMethod:"=switchBackMethod",propSwitchToUserName:"=switchToUserName",propSuUserPassword:"=suUserPassword",propMessage:"=message",propOnSwitchTo:"=onSwitchTo",propOnSwitchBack:"=onSwitchBack"},template:'<style type="text/css">    .switch-user-admin button,    .switch-user-admin label,    .switch-user-admin p {        margin: 5px 0px 5px 0px;    }    .switch-user-inject .alert {        padding: 3px;    }    .switch-user-inject .alert-caution {        background-color: #FFFFAA;        border-color: #FFFF00;        color: #999900;    }</style><div class="switch-user-admin container-fluid" ng-hide="propLoading">    <div class="row form-inline">        <div class="col-md-12" ng-show="propMessage">            <div class="alert alert-warning" role="alert">                {{propMessage.value}}            </div>        </div>        <div class="col-md-3" ng-show="propIsSu">            <label>Impersonating: {{propImpersonatedUser.id}} {{propImpersonatedUser.username}}</label>        </div>        <div class="col-md-4">            <form ng-submit="propOnSwitchTo()">                <input class="form-control input-sm"                       id="switchToUserName"                       placeholder="Username"                       ng-model="propSwitchToUserName"                       type="text"/>                <button class="btn btn-default btn-sm"                        type="submit">Switch to User                </button>            </form>        </div>        <div class="col-md-4" ng-show="propIsSu">            <form ng-submit="propOnSwitchBack()">                <input class="form-control input-sm"                       id="suUserPassword"                       placeholder="password"                       ng-model="propSuUserPassword"                       ng-show="switchBackMethod == \'auth\'"                       type="password"/>                <button class="btn btn-primary btn-sm"                        type="submit">End Impersonation                </button>            </form>        </div>    </div></div>'}}]);var RcmSwitchUserService=function($http,rcmLoading,rcmApiLibService,rcmEventManager){function getSuMayBeActive(){var mayBeActive=!1;return"undefined"!=typeof sessionStorage&&sessionStorage.rcmSwitchUser_suMayBeActive&&(mayBeActive=JSON.parse(sessionStorage.rcmSwitchUser_suMayBeActive)),mayBeActive}function setSuMayBeActive(data){"undefined"!=typeof sessionStorage&&(sessionStorage.rcmSwitchUser_suMayBeActive=JSON.stringify(data))}var self=this;self.config={suMessage:"User is currently impersonating."},self.suData={isSu:!1,impersonatedUser:null,switchBackMethod:"auth"};var apiPaths={switchUser:"/api/rpc/switch-user",switchUserBack:"/api/rpc/switch-user-back"},changeSu=function(data){return data?void(self.suData=data):void(self.suData={isSu:!1,impersonatedUser:null,switchBackMethod:self.suData.switchBackMethod})},buildValidData=function(data){return data||(data={isSu:!1,impersonatedUser:null,switchBackMethod:self.suData.switchBackMethod}),data},onSuChange=function(data){data=buildValidData(data),changeSu(data),rcmEventManager.trigger("rcmSwitchUserService.suChange",data)};self.getSu=function(onSuccess,onError){rcmApiLibService.get({url:apiPaths.switchUser,loading:function(loading){var loadingInt=Number(!loading);rcmLoading.setLoading("rcmSwitchUserService.loading",loadingInt)},success:function(response){onSuChange(response.data),onSuccess(response)},error:function(response){onSuChange(response.data),onError(response)}})},self.switchUser=function(switchToUsername,onSuccess,onError){setSuMayBeActive(!0);var data={switchToUsername:switchToUsername};rcmApiLibService.post({url:apiPaths.switchUser,data:data,loading:function(loading){var loadingInt=Number(!loading);rcmLoading.setLoading("rcmSwitchUserService.loading",loadingInt)},success:function(response,status){onSuChange(response.data),onSuccess(response,status)},error:function(response,status){onSuChange(response.data),onError(response,status)}})},self.switchUserBack=function(suUserPassword,onSuccess,onError){var data={suUserPassword:suUserPassword};rcmApiLibService.post({url:apiPaths.switchUserBack,data:data,loading:function(loading){var loadingInt=Number(!loading);rcmLoading.setLoading("rcmSwitchUserService.loading",loadingInt)},success:function(response,status){onSuChange(),onSuccess(response,status)},error:function(response,status){onSuChange(),onError(response,status)}})};var init=function(){getSuMayBeActive()&&self.getSu(function(){},function(){})};init()};angular.module("rcmSwitchUser").service("rcmSwitchUserService",["$http","rcmLoading","rcmApiLibService","rcmEventManager",function($http,rcmLoading,rcmApiLibService,rcmEventManager){return new RcmSwitchUserService($http,rcmLoading,rcmApiLibService,rcmEventManager)}]);var RcmSwitchUserMessageInject=function($compile){var self=this;self.injectHeader=function(){var content="<div rcm-switch-user-message></div>",element=jQuery(content);element.prependTo("body");var contents=element.contents(),aemlement=angular.element(element),scope=aemlement.scope;$compile(contents)(scope)}};angular.module("rcmSwitchUser").service("rcmSwitchUserMessageInject",["$compile",function($compile){return new RcmSwitchUserMessageInject($compile)}]),angular.module("rcmSwitchUser").run(["rcmSwitchUserMessageInject",function(rcmSwitchUserMessageInject){rcmSwitchUserMessageInject.injectHeader()}]),angular.module("rcmSwitchUser").directive("rcmSwitchUserMessage",["$sce","rcmSwitchUserService","rcmEventManager",function($sce,rcmSwitchUserService,rcmEventManager){function link($scope,element,attrs){$scope.loading=!0,$scope.isSu=!1,$scope.impersonatedUser=null,rcmEventManager.on("rcmSwitchUserService.suChange",function(data){$scope.isSu=data.isSu,$scope.impersonatedUser=data.impersonatedUser,$scope.loading=!1})}return{link:link,scope:{},template:'<div class="switch-user-inject" ng-if="isSu"> <div class="alert alert-caution" role="alert">   <div rcm-switch-user-admin switch-to-user-name="null"></div>  </div> </div>'}}]),angular.module("rcmSwitchUser").directive("rcmSwitchUserAdmin",["$sce","rcmSwitchUserService","rcmEventManager","rcmApiLibMessageService","$window","rcmLoading",function($sce,rcmSwitchUserService,rcmEventManager,rcmApiLibMessageService,$window,rcmLoading){function link($scope,element,attrs){$scope.loading=!1,$scope.isSu=!1,$scope.impersonatedUser=null,$scope.switchBackMethod="auth",$scope.suUserPassword=null,$scope.message=null;var setLoading=function(isLoading){$scope.loading=isLoading;var loadingInt=Number(!isLoading);rcmLoading.setLoading("rcmSwitchUserAdmin.loading",loadingInt)},apiInit=function(){setLoading(!0),$scope.message=null},handleMessages=function(messages){$scope.message=null,rcmApiLibMessageService.getPrimaryMessage(messages,function(message){message&&($scope.message=message)})},onSwitchToSuccess=function(response){$window.location.reload()},onSwitchToError=function(response){handleMessages(response.messages),setLoading(!1)},onSwitchBackAndToSuccess=function(response){$scope.suUserPassword=null,switchTo()},onSwitchBackSuccess=function(response){$scope.suUserPassword=null,$window.location.reload()},onSwitchBackError=function(response){$scope.suUserPassword=null,handleMessages(response.messages),setLoading(!1)},switchTo=function(){apiInit(),rcmSwitchUserService.switchUser($scope.propSwitchToUserName,onSwitchToSuccess,onSwitchToError)};$scope.switchTo=function(){return $scope.isSu?(apiInit(),void rcmSwitchUserService.switchUserBack($scope.propSwitchToUserName,onSwitchBackAndToSuccess,onSwitchBackError)):void switchTo()},$scope.switchBack=function(){apiInit(),rcmSwitchUserService.switchUserBack($scope.suUserPassword,onSwitchBackSuccess,onSwitchBackError)},rcmEventManager.on("rcmSwitchUserService.suChange",function(data){$scope.isSu=data.isSu,$scope.impersonatedUser=data.impersonatedUser,$scope.switchBackMethod=data.switchBackMethod})}return{link:link,scope:{propSwitchToUserName:"=switchToUserName"},template:'<rcm-switch-user-switch-to-user loading="loading" is-su="isSu" impersonated-user="impersonatedUser" switch-back-method="switchBackMethod" switch-to-user-name="propSwitchToUserName" su-user-password="suUserPassword" message="message" on-switch-to="switchTo" on-switch-back="switchBack"></rcm-switch-user-switch-to-user>'}}]);
//# sourceMappingURL=switch-user.min.js.map